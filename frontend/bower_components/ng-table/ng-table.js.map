{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4a38b6f257b13814d4ab","webpack:///external \"angular\"","webpack:///./src/browser/index.ts","webpack:///./src/core/index.ts","webpack:///./src/browser/ngTable.directive.ts","webpack:///./src/browser/ngTableColumn.ts","webpack:///./src/browser/ngTableColumnsBinding.directive.ts","webpack:///./src/browser/ngTableController.ts","webpack:///./src/browser/ngTableDynamic.directive.ts","webpack:///./src/browser/ngTableFilterConfig.ts","webpack:///./src/browser/ngTableFilterRow.directive.ts","webpack:///./src/browser/ngTableFilterRowController.ts","webpack:///./src/browser/ngTableGroupRow.directive.ts","webpack:///./src/browser/ngTableGroupRowController.ts","webpack:///./src/browser/ngTablePagination.directive.ts","webpack:///./src/browser/ngTableSelectFilterDs.directive.ts","webpack:///./src/browser/ngTableSorterRow.directive.ts","webpack:///./src/browser/ngTableSorterRowController.ts","webpack:///./src/core/ngTableDefaultGetData.ts","webpack:///./src/core/ngTableDefaults.ts","webpack:///./src/core/ngTableEventsChannel.ts","webpack:///./src/core/ngTableParams.ts","webpack:///./src/browser/filterRow.html","webpack:///./src/browser/filters/number.html","webpack:///./src/browser/filters/select-multiple.html","webpack:///./src/browser/filters/select.html","webpack:///./src/browser/filters/text.html","webpack:///./src/browser/groupRow.html","webpack:///./src/browser/header.html","webpack:///./src/browser/pager.html","webpack:///./src/browser/sorterRow.html","webpack:///./index.ts"],"names":[],"mappings":"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","file":"ng-table.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-table\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ng-table\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a38b6f257b13814d4ab","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0","import * as angular from 'angular';\nimport { ngTable } from './ngTable.directive';\nimport { ngTableColumn } from './ngTableColumn';\nimport { ngTableColumnsBinding } from './ngTableColumnsBinding.directive';\nimport { ngTableController } from './ngTableController';\nimport { ngTableDynamic } from './ngTableDynamic.directive';\nimport { ngTableFilterConfigProvider } from './ngTableFilterConfig';\nimport { ngTableFilterRow } from './ngTableFilterRow.directive';\nimport { ngTableFilterRowController } from './ngTableFilterRowController';\nimport { ngTableGroupRow } from './ngTableGroupRow.directive';\nimport { ngTableGroupRowController } from './ngTableGroupRowController';\nimport { ngTablePagination } from './ngTablePagination.directive';\nimport { ngTableSelectFilterDs } from './ngTableSelectFilterDs.directive';\nimport { ngTableSorterRow } from './ngTableSorterRow.directive';\nimport { ngTableSorterRowController } from './ngTableSorterRowController';\nimport './filters/number.html';\nimport './filters/select.html';\nimport './filters/select-multiple.html';\nimport './filters/text.html';\nimport './pager.html';\nimport './header.html';\n\nexport default angular.module('ngTable-browser', [])\n    .directive('ngTable', ngTable)\n    .factory('ngTableColumn', ngTableColumn)\n    .directive('ngTableColumnsBinding', ngTableColumnsBinding)\n    .controller('ngTableController', ngTableController)\n    .directive('ngTableDynamic', ngTableDynamic)\n    .provider('ngTableFilterConfig', ngTableFilterConfigProvider as any)\n    .directive('ngTableFilterRow', ngTableFilterRow)\n    .controller('ngTableFilterRowController', ngTableFilterRowController)\n    .directive('ngTableGroupRow', ngTableGroupRow)\n    .controller('ngTableGroupRowController', ngTableGroupRowController)\n    .directive('ngTablePagination', ngTablePagination)\n    .directive('ngTableSelectFilterDs', ngTableSelectFilterDs)\n    .directive('ngTableSorterRow', ngTableSorterRow)\n    .controller('ngTableSorterRowController', ngTableSorterRowController);\n\nexport * from './public-interfaces';\n\n\n// WEBPACK FOOTER //\n// ./src/browser/index.ts","import * as angular from 'angular';\nimport { ngTableDefaultGetDataProvider } from './ngTableDefaultGetData';\nimport { ngTableDefaults } from './ngTableDefaults';\nimport { ngTableParamsFactory } from './ngTableParams';\nimport { ngTableEventsChannel } from './ngTableEventsChannel';\n\nexport default angular.module('ngTable-core', [])\n    .provider('ngTableDefaultGetData', ngTableDefaultGetDataProvider)\n    .value('ngTableDefaults',ngTableDefaults)\n    .factory('NgTableParams', ngTableParamsFactory)\n    .factory('ngTableEventsChannel', ngTableEventsChannel);\n\nexport * from './public-interfaces';\n\n\n// WEBPACK FOOTER //\n// ./src/core/index.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\nimport { IAugmentedJQuery, IDirective, IQService, IParseService, IPromise, IScope } from 'angular';\nimport * as ng1 from 'angular';\nimport { \n    IColumnDef, ColumnFieldContext, IColumnField, IFilterTemplateDefMap, SelectData, ITableController, \n    ITableInputAttributes \n} from './public-interfaces';\n\ninterface IScopeExtensions {\n    $columns: IColumnDef[]\n}\n\nngTable.$inject = ['$q', '$parse'];\n\n/**\n * Directive that instantiates {@link ngTableController ngTableController}.\n * @ngdoc directive\n * @name ngTable\n * @example\n * \n * ```html\n * <table ng-table=\"$ctrl.tableParams\" show-filter=\"true\" class=\"table table-bordered\">\n *  <tr ng-repeat=\"user in $data\">\n *      <td data-title=\"'Name'\" sortable=\"'name'\" filter=\"{ 'name': 'text' }\">\n *          {{user.name}}\n *      </td>\n *      <td data-title=\"'Age'\" sortable=\"'age'\" filter=\"{ 'age': 'text' }\">\n *          {{user.age}}\n *      </td>\n *  </tr>\n * </table>\n * ```\n */\nexport function ngTable($q: IQService, $parse: IParseService) : IDirective {\n\n    return {\n        restrict: 'A',\n        priority: 1001,\n        scope: true,\n        controller: 'ngTableController',\n        compile: function(element: IAugmentedJQuery) {\n            var columns: IColumnDef[] = [],\n                i = 0,\n                dataRow: IAugmentedJQuery,\n                groupRow: IAugmentedJQuery,\n                rows: IAugmentedJQuery[] = [];\n\n            ng1.forEach(element.find('tr'), function(tr) {\n                rows.push(ng1.element(tr))\n            });\n            dataRow = rows.filter(function(tr){\n                return !tr.hasClass('ng-table-group');\n            })[0];\n            groupRow = rows.filter(function(tr){\n                return tr.hasClass('ng-table-group');\n            })[0];\n\n            if (!dataRow) {\n                return undefined;\n            }\n            ng1.forEach(dataRow.find('td'), function(item) {\n                var el = ng1.element(item);\n                if (el.attr('ignore-cell') && 'true' === el.attr('ignore-cell')) {\n                    return;\n                }\n\n                var getAttrValue = function(attr: string){\n                    return el.attr('x-data-' + attr) || el.attr('data-' + attr) || el.attr(attr);\n                };\n                var setAttrValue = function(attr: string, value: string){\n                    if (el.attr('x-data-' + attr)){\n                        el.attr('x-data-' + attr, value)\n                    } else if (el.attr('data' + attr)){\n                        el.attr('data' + attr, value)\n                    } else {\n                        el.attr(attr, value)\n                    }\n                };\n\n                var parsedAttribute = function<T>(attr: string): IColumnField<T> {\n                    var expr = getAttrValue(attr);\n                    if (!expr){\n                        return undefined;\n                    }\n\n                    var localValue: any;\n                    var getter = function (context: ColumnFieldContext) {\n                        if (localValue !== undefined){\n                            return localValue as T;\n                        }\n                        return $parse(expr)(context) as T;\n                    };\n                    (getter as any).assign = function($scope: ColumnFieldContext, value: any){\n                        var parsedExpr = $parse(expr);\n                        if (parsedExpr.assign) {\n                            // we should be writing back to the parent scope as this is where the expression\n                            // came from\n                            parsedExpr.assign($scope.$parent, value);\n                        } else {\n                            localValue = value;\n                        }\n                    };\n                    return getter as IColumnField<T>;\n                };\n                var titleExpr = getAttrValue('title-alt') || getAttrValue('title');\n                if (titleExpr){\n                    el.attr('data-title-text', '{{' + titleExpr + '}}'); // this used in responsive table\n                }\n                // NOTE TO MAINTAINERS: if you add extra fields to a $column be sure to extend ngTableColumn with\n                // a corresponding \"safe\" default\n                columns.push({\n                    id: i++,\n                    title: parsedAttribute<string>('title'),\n                    titleAlt: parsedAttribute<string>('title-alt'),\n                    headerTitle: parsedAttribute<string>('header-title'),\n                    sortable: parsedAttribute<string | boolean>('sortable'),\n                    'class': parsedAttribute<string>('header-class'),\n                    filter: parsedAttribute<IFilterTemplateDefMap>('filter'),\n                    groupable: parsedAttribute<string | boolean>('groupable'),\n                    headerTemplateURL: parsedAttribute<string | boolean>('header'),\n                    filterData: parsedAttribute<IPromise<SelectData> | SelectData>('filter-data'),\n                    show: el.attr(\"ng-if\") ? parsedAttribute<boolean>('ng-if') : undefined\n                });\n\n                if (groupRow || el.attr(\"ng-if\")){\n                    // change ng-if to bind to our column definition which we know will be writable\n                    // because this will potentially increase the $watch count, only do so if we already have an\n                    // ng-if or when we definitely need to change visibility of the columns.\n                    // currently only ngTableGroupRow directive needs to change visibility\n                    setAttrValue('ng-if', '$columns[' + (columns.length - 1) + '].show(this)');\n                }\n            });\n            return function(scope: IScope & IScopeExtensions, element: IAugmentedJQuery, attrs: ITableInputAttributes, controller: ITableController) {\n                scope.$columns = columns = controller.buildColumns(columns);\n\n                controller.setupBindingsToInternalScope(attrs.ngTable);\n                controller.loadFilterData(columns);\n                controller.compileDirectiveTemplates();\n            };\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTable.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IScope } from 'angular';\nimport * as ng1 from 'angular';\nimport { IColumnDef, IDynamicTableColDef } from './public-interfaces';\n\n/**\n * @private\n * Definition of the service used to construct a table $column used by {@link ngTable ngTable} directive\n */\nexport interface IColumnBuilder {\n    /**\n     * Creates a $column for use within a header template\n     *\n     * @param column the initial definition for $column to build\n     * @param defaultScope the $scope to supply to the $column getter methods when not supplied by caller\n     * @param columns a reference to the $columns array to make available on the context supplied to the\n     * $column getter methods\n     */\n    buildColumn(column: IColumnDef | IDynamicTableColDef, defaultScope: IScope, columns: Array<IColumnDef | IDynamicTableColDef>): IColumnDef | IDynamicTableColDef\n}\n\nngTableColumn.$inject = [];\n\n/**\n * @private\n * Service to construct a $column definition used by {@link ngTable ngTable} directive\n */\nexport function ngTableColumn(): IColumnBuilder {\n\n    return {\n        buildColumn: buildColumn\n    };\n\n    //////////////\n\n    function buildColumn(column: IColumnDef | IDynamicTableColDef, defaultScope: IScope, columns: IColumnDef[]): IColumnDef | IDynamicTableColDef {\n        // note: we're not modifying the original column object. This helps to avoid unintended side affects\n        var extendedCol = Object.create(column);\n        var defaults = createDefaults();\n        for (var prop in defaults) {\n            if (extendedCol[prop] === undefined) {\n                extendedCol[prop] = defaults[prop];\n            }\n            if(!ng1.isFunction(extendedCol[prop])){\n                // wrap raw field values with \"getter\" functions\n                // - this is to ensure consistency with how ngTable.compile builds columns\n                // - note that the original column object is being \"proxied\"; this is important\n                //   as it ensure that any changes to the original object will be returned by the \"getter\"\n                (function(prop1: string){\n                    var getterSetter = function getterSetter(/*[value] || [$scope, locals]*/) {\n                        if (arguments.length === 1 && !isScopeLike(arguments[0])) {\n                            (getterSetter as any).assign(null, arguments[0]);\n                        } else {\n                            return column[prop1];\n                        }\n                    };\n                    (getterSetter as any).assign = function($scope: IScope, value: any){\n                        column[prop1] = value;\n                    };\n                    extendedCol[prop1] = getterSetter;\n                })(prop);\n            }\n            (function(prop1: string){\n                // satisfy the arguments expected by the function returned by parsedAttribute in the ngTable directive\n                var getterFn = extendedCol[prop1];\n                extendedCol[prop1] = function () {\n                    if (arguments.length === 1 && !isScopeLike(arguments[0])){\n                        getterFn.assign(null, arguments[0]);\n                    } else {\n                        var scope = arguments[0] || defaultScope;\n                        var context = Object.create(scope);\n                        ng1.extend(context, {\n                            $column: extendedCol,\n                            $columns: columns\n                        });\n                        return getterFn.call(column, context);\n                    }\n                };\n                if (getterFn.assign){\n                    extendedCol[prop1].assign = getterFn.assign;\n                }\n            })(prop);\n        }\n        return extendedCol;\n    }\n\n    function createDefaults(){\n        return {\n            'class': createGetterSetter(''),\n            filter: createGetterSetter(false),\n            groupable: createGetterSetter(false),\n            filterData: ng1.noop,\n            headerTemplateURL: createGetterSetter(false),\n            headerTitle: createGetterSetter(''),\n            sortable: createGetterSetter(false),\n            show: createGetterSetter(true),\n            title: createGetterSetter(''),\n            titleAlt: createGetterSetter('')\n        };\n    }\n\n    function createGetterSetter(initialValue: any){\n        var value = initialValue;\n        var getterSetter = function getterSetter(/*[value] || [$scope, locals]*/){\n            if (arguments.length === 1 && !isScopeLike(arguments[0])) {\n                (getterSetter as any).assign(null, arguments[0]);\n            } else {\n                return value;\n            }\n        };\n        (getterSetter as any).assign = function($scope: IScope, newValue: any){\n            value = newValue;\n        };\n        return getterSetter;\n    }\n\n    function isScopeLike(object: any){\n        return object != null && ng1.isFunction(object.$new);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableColumn.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IAugmentedJQuery, IAttributes, IDirective, IParseService } from 'angular';\nimport { ITableScope } from './ngTableController';\nimport { IColumnDef } from './public-interfaces';\n\n/**\n * @private\n */\ninterface IInputAttributes extends IAttributes {\n    ngTableColumnsBinding: string;\n}\n\nngTableColumnsBinding.$inject = [\"$parse\"];\n\n/**\n * One-way data binds the $columns array generated by ngTable/ngTableDynamic to the specified\n * expression.\n * This allows the $columns array created for the table to be accessed outside of the html table\n * markup.\n * \n * @ngdoc directive\n * \n * @example\n * ```html\n * <table ng-table=\"$ctrl.tableParams\" class=\"table\" ng-table-columns-binding=\"$ctlr.tableColumns\">\n * ```\n */\nexport function ngTableColumnsBinding<T>($parse: IParseService) : IDirective {\n    var directive = {\n        restrict: 'A',\n        require: 'ngTable',\n        link: linkFn\n    };\n    return directive;\n\n    function linkFn($scope: ITableScope<T>, $element: IAugmentedJQuery, $attrs: IInputAttributes){\n        var setter = $parse($attrs.ngTableColumnsBinding).assign;\n        if (setter){\n            $scope.$watch<IColumnDef[]>('$columns', function(newColumns){\n                var shallowClone = (newColumns || []).slice(0);\n                setter($scope, shallowClone);\n            });\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableColumnsBinding.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { \n    IAttributes, IAugmentedJQuery, ICompileService, IDocumentService, IParseService, IPromise, IScope, \n    ITimeoutService \n} from 'angular';\nimport * as ng1 from 'angular';\nimport { \n    DataResult, DataResults, IDataRowGroup, GroupedDataResults, INgTableParams, IEventsChannel, \n    IPageButton, ITableParamsConstructor \n} from '../core';\nimport { IColumnDef, IDynamicTableColDef, SelectData, ITableInputAttributes } from './public-interfaces';\nimport { IColumnBuilder } from './ngTableColumn';\n\n/**\n * @private\n */\nexport interface ITableScope<T> extends IScope {\n    $columns: IColumnDef[];\n    $loading: boolean;\n    $filterRow: {\n        disabled: boolean;\n    };\n    $data?: DataResults<T>;\n    $groups?: GroupedDataResults<T>;\n    $groupRow: {\n        show: boolean;\n    };\n    show_filter: boolean;\n    pages: IPageButton[];\n    templates: {\n        header: string;\n        pagination: string;\n    },\n    params: INgTableParams<T>\n}\n\nngTableController.$inject = [\n    '$scope', 'NgTableParams', '$timeout', '$parse', '$compile', '$attrs', '$element', '$document', 'ngTableColumn', 'ngTableEventsChannel'\n];\n\n/**\n * The controller for the {@link ngTable ngTable} and {@link ngTableDynamic ngTableDynamic} directives\n */\nexport function ngTableController<T>(\n    $scope: ITableScope<T>, NgTableParams: ITableParamsConstructor<T>, $timeout: ITimeoutService, $parse: IParseService,\n    $compile: ICompileService, $attrs: IAttributes & ITableInputAttributes, $element: IAugmentedJQuery, $document: IDocumentService,\n    ngTableColumn: IColumnBuilder, ngTableEventsChannel: IEventsChannel) {\n    var isFirstTimeLoad = true;\n    $scope.$filterRow = { disabled: false };\n    $scope.$loading = false;\n\n    // until such times as the directive uses an isolated scope, we need to ensure that the check for\n    // the params field only consults the \"own properties\" of the $scope. This is to avoid seeing the params\n    // field on a $scope higher up in the prototype chain\n    if (!$scope.hasOwnProperty(\"params\")) {\n        $scope.params = new NgTableParams(true);\n    }\n\n    var delayFilter = (function () {\n        var timer: IPromise<any>;\n        return function (callback: (...args: any[]) => void, ms: number) {\n            $timeout.cancel(timer);\n            timer = $timeout(callback, ms);\n        };\n    })();\n\n    function onDataReloadStatusChange(newStatus: boolean/*, oldStatus*/) {\n        if (!newStatus || $scope.params.hasErrorState()) {\n            return;\n        }\n\n        var currentParams = $scope.params;\n        var filterOptions = currentParams.settings().filterOptions;\n\n        if (currentParams.hasFilterChanges()) {\n            var applyFilter = function () {\n                currentParams.page(1);\n                currentParams.reload();\n            };\n            if (filterOptions.filterDelay) {\n                delayFilter(applyFilter, filterOptions.filterDelay);\n            } else {\n                applyFilter();\n            }\n        } else {\n            currentParams.reload();\n        }\n    }\n\n    // watch for when a new NgTableParams is bound to the scope\n    // CRITICAL: the watch must be for reference and NOT value equality; this is because NgTableParams maintains\n    // the current data page as a field. Checking this for value equality would be terrible for performance\n    // and potentially cause an error if the items in that array has circular references\n    $scope.$watch<INgTableParams<T>>('params', (newParams, oldParams) => {\n        if (newParams === oldParams || !newParams) {\n            return;\n        }\n\n        newParams.reload();\n    }, false);\n\n    $scope.$watch('params.isDataReloadRequired()', onDataReloadStatusChange);\n\n    this.compileDirectiveTemplates = function () {\n        if (!$element.hasClass('ng-table')) {\n            $scope.templates = {\n                header: ($attrs.templateHeader ? $attrs.templateHeader : 'ng-table/header.html'),\n                pagination: ($attrs.templatePagination ? $attrs.templatePagination : 'ng-table/pager.html')\n            };\n            $element.addClass('ng-table');\n            var headerTemplate: IAugmentedJQuery = null;\n\n            // $element.find('> thead').length === 0 doesn't work on jqlite\n            var theadFound = false;\n            ng1.forEach($element.children(), function (e) {\n                if (e.tagName === 'THEAD') {\n                    theadFound = true;\n                }\n            });\n            if (!theadFound) {\n                headerTemplate = ng1.element('<thead ng-include=\"templates.header\"></thead>', $document);\n                $element.prepend(headerTemplate);\n            }\n            var paginationTemplate = ng1.element(\n                '<div ng-table-pagination=\"params\" template-url=\"templates.pagination\"></div>',\n                $document\n            );\n            $element.after(paginationTemplate);\n            if (headerTemplate) {\n                $compile(headerTemplate)($scope);\n            }\n            $compile(paginationTemplate)($scope);\n        }\n    };\n\n    this.loadFilterData = function ($columns: IColumnDef[]) {\n        ng1.forEach($columns, function ($column) {\n            var result = $column.filterData($scope);\n            if (!result) {\n                delete $column.filterData;\n                return undefined;\n            }\n\n            if (isPromiseLike(result)) {\n                delete $column.filterData;\n                return result.then(function (data) {\n                    // our deferred can eventually return arrays, functions and objects\n                    if (!ng1.isArray(data) && !ng1.isFunction(data) && !ng1.isObject(data)) {\n                        // if none of the above was found - we just want an empty array\n                        data = [];\n                    }\n                    $column.data = data;\n                });\n            }\n            // otherwise, we just return what the user gave us. It could be a function, array, object, whatever\n            else {\n                return $column.data = result;\n            }\n        });\n\n        function isPromiseLike(val: any): val is IPromise<SelectData> {\n            return val && typeof val === 'object' && typeof val.then === 'function';\n        }\n    };\n\n    this.buildColumns = function (columns: Array<IColumnDef | IDynamicTableColDef>) {\n        var result: Array<IColumnDef | IDynamicTableColDef> = [];\n        (columns || []).forEach(function (col) {\n            result.push(ngTableColumn.buildColumn(col, $scope, result));\n        });\n        return result\n    };\n\n    this.parseNgTableDynamicExpr = function (attr: string) {\n        if (!attr || attr.indexOf(\" with \") > -1) {\n            var parts = attr.split(/\\s+with\\s+/);\n            return {\n                tableParams: parts[0],\n                columns: parts[1]\n            };\n        } else {\n            throw new Error('Parse error (expected example: ng-table-dynamic=\\'tableParams with cols\\')');\n        }\n    };\n\n    this.setupBindingsToInternalScope = function (tableParamsExpr: string) {\n\n        // note: this we're setting up watches to simulate angular's isolated scope bindings\n\n        // note: is REALLY important to watch for a change to the ngTableParams *reference* rather than\n        // $watch for value equivalence. This is because ngTableParams references the current page of data as\n        // a field and it's important not to watch this\n        $scope.$watch<INgTableParams<T>>(tableParamsExpr, function (params) {\n            if (params === undefined) {\n                return;\n            }\n            $scope.params = params;\n        }, false);\n\n        setupFilterRowBindingsToInternalScope();\n        setupGroupRowBindingsToInternalScope();\n    };\n\n    function setupFilterRowBindingsToInternalScope() {\n        if ($attrs.showFilter) {\n            $scope.$parent.$watch<boolean>($attrs.showFilter, function (value) {\n                $scope.show_filter = value;\n            });\n        } else {\n            $scope.$watch(hasVisibleFilterColumn, function (value) {\n                $scope.show_filter = value;\n            })\n        }\n\n        if ($attrs.disableFilter) {\n            $scope.$parent.$watch<boolean>($attrs.disableFilter, function (value) {\n                $scope.$filterRow.disabled = value;\n            });\n        }\n    }\n\n    function setupGroupRowBindingsToInternalScope() {\n        $scope.$groupRow = { show: false };\n        if ($attrs.showGroup) {\n            var showGroupGetter = $parse($attrs.showGroup);\n            $scope.$parent.$watch<boolean>(showGroupGetter, function (value) {\n                $scope.$groupRow.show = value;\n            });\n            if (showGroupGetter.assign) {\n                // setup two-way databinding thus allowing ngTableGrowRow to assign to the showGroup expression\n                $scope.$watch<boolean>('$groupRow.show', function (value) {\n                    showGroupGetter.assign($scope.$parent, value);\n                });\n            }\n        } else {\n            $scope.$watch<boolean>('params.hasGroup()', function (newValue) {\n                $scope.$groupRow.show = newValue;\n            });\n        }\n    }\n\n    function getVisibleColumns() {\n        return ($scope.$columns || []).filter(function (c) {\n            return c.show($scope);\n        });\n    }\n\n    function hasVisibleFilterColumn() {\n        if (!$scope.$columns) return false;\n\n        return some($scope.$columns, function ($column) {\n            return $column.show($scope) && !!$column.filter($scope);\n        });\n    }\n\n    function some<T>(array: T[], predicate: (item: T) => boolean) {\n        var found = false;\n        for (var i = 0; i < array.length; i++) {\n            var obj = array[i];\n            if (predicate(obj)) {\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n\n    function commonInit() {\n        ngTableEventsChannel.onAfterReloadData<T>(\n            (params, newDatapage) => {\n                var visibleColumns = getVisibleColumns();\n                if (params.hasGroup()) {\n                    $scope.$groups = (newDatapage || []) as GroupedDataResults<T>;\n                    $scope.$groups.visibleColumnCount = visibleColumns.length;\n                } else {\n                    $scope.$data = (newDatapage || []) as DataResults<T>;\n                    $scope.$data.visibleColumnCount = visibleColumns.length;\n                }\n            },\n            $scope,\n            (publisher) => $scope.params === publisher\n        );\n\n        ngTableEventsChannel.onPagesChanged<T>(\n            (params, newPages) => {\n                $scope.pages = newPages;\n            },\n            $scope,\n            (publisher) => $scope.params === publisher\n        );\n    }\n\n    commonInit();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableController.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IAugmentedJQuery, IDirective, IScope } from 'angular';\nimport * as ng1 from 'angular';\nimport { IColumnDef, IDynamicTableColDef, ITableController, ITableInputAttributes } from './public-interfaces';\n\ninterface IScopeExtensions {\n    $columns: IColumnDef[]\n}\n\nngTableDynamic.$inject = [];\n\n/**\n * A dynamic version of the {@link ngTable ngTable} directive that accepts a dynamic list of columns\n * definitions to render\n * @ngdoc directive\n *\n * @example\n * ```html\n * <table ng-table-dynamic=\"$ctrl.tableParams with $ctrl.cols\" class=\"table\">\n *  <tr ng-repeat=\"row in $data\">\n *    <td ng-repeat=\"col in $columns\">{{row[col.field]}}</td>\n *  </tr>\n * </table>\n * ```\n */\nexport function ngTableDynamic () : IDirective{\n\n    return {\n        restrict: 'A',\n        priority: 1001,\n        scope: true,\n        controller: 'ngTableController',\n        compile: function(tElement: IAugmentedJQuery) {\n            var row: IAugmentedJQuery;\n\n            // IE 8 fix :not(.ng-table-group) selector\n            ng1.forEach(tElement.find('tr'), function(tr) {\n                tr = ng1.element(tr);\n                if (!tr.hasClass('ng-table-group') && !row) {\n                    row = tr;\n                }\n            });\n            if (!row) {\n                return undefined;\n            }\n\n            ng1.forEach(row.find('td'), function(item) {\n                var el = ng1.element(item);\n                var getAttrValue = function(attr: string){\n                    return el.attr('x-data-' + attr) || el.attr('data-' + attr) || el.attr(attr);\n                };\n\n                // this used in responsive table\n                var titleExpr = getAttrValue('title');\n                if (!titleExpr){\n                    el.attr('data-title-text', '{{$columns[$index].titleAlt(this) || $columns[$index].title(this)}}');\n                }\n                var showExpr = el.attr('ng-if');\n                if (!showExpr){\n                    el.attr('ng-if', '$columns[$index].show(this)');\n                }\n            });\n            return function (scope: IScope & IScopeExtensions, element: IAugmentedJQuery, attrs: ITableInputAttributes, controller: ITableController) {\n                var expr = controller.parseNgTableDynamicExpr(attrs.ngTableDynamic);\n\n                controller.setupBindingsToInternalScope(expr.tableParams);\n                controller.compileDirectiveTemplates();\n\n                scope.$watchCollection<IDynamicTableColDef[]>(expr.columns, function (newCols/*, oldCols*/) {\n                    scope.$columns = controller.buildColumns(newCols);\n                    controller.loadFilterData(scope.$columns);\n                });\n            };\n        }\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableDynamic.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { IFilterConfig, IFilterConfigValues, IFilterTemplateDef } from './public-interfaces';\n\nngTableFilterConfigProvider.$inject = [];\n\n/**\n * The angular provider used to configure the behaviour of the `ngTableFilterConfig` service.\n * \n * Implements the {@link IFilterConfigProvider IFilterConfigProvider} interface\n */\nexport function ngTableFilterConfigProvider() {\n    var config: IFilterConfigValues;\n    var defaultConfig: IFilterConfigValues = {\n        defaultBaseUrl: 'ng-table/filters/',\n        defaultExt: '.html',\n        aliasUrls: {}\n    };\n\n    this.$get = ngTableFilterConfig;\n    this.resetConfigs = resetConfigs;\n    this.setConfig = setConfig;\n\n    init();\n\n    /////////\n\n    function init(){\n        resetConfigs();\n    }\n\n    function resetConfigs(){\n        config = defaultConfig;\n    }\n\n    function setConfig(customConfig: IFilterConfigValues){\n        var mergeConfig = ng1.extend({}, config, customConfig);\n        mergeConfig.aliasUrls = ng1.extend({}, config.aliasUrls, customConfig.aliasUrls);\n        config = mergeConfig;\n    }\n\n    /////////\n\n    ngTableFilterConfig.$inject = [];\n\n    function ngTableFilterConfig(): IFilterConfig {\n\n        var publicConfig: IFilterConfigValues;\n\n        var service = {\n            config: publicConfig,\n            getTemplateUrl: getTemplateUrl,\n            getUrlForAlias: getUrlForAlias\n        };\n        Object.defineProperty(service, \"config\", {\n            get: function(){\n                return publicConfig = publicConfig || ng1.copy(config);\n            },\n            enumerable: true\n        });\n\n        return service;\n\n        /////////\n\n        function getTemplateUrl(filterDef: string | IFilterTemplateDef, filterKey?: string){\n            var filterName: string;\n            if (typeof filterDef !== 'string'){\n                filterName = filterDef.id;\n            } else {\n                filterName = filterDef;\n            }\n            if (filterName.indexOf('/') !== -1){\n                return filterName;\n            }\n\n            return service.getUrlForAlias(filterName, filterKey);\n        }\n\n        function getUrlForAlias(aliasName: string, filterKey?: string){\n            return config.aliasUrls[aliasName] || config.defaultBaseUrl + aliasName + config.defaultExt;\n        }\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableFilterConfig.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nvar templateUrl = require('./filterRow.html');\n\nngTableFilterRow.$inject = [];\n\n/**\n * directive that renders the filter header row for a table \n * @ngdoc directive\n * @example\n * ```html\n * <ng-table-filter-row></ng-table-filter-row>\n * ```\n */\nexport function ngTableFilterRow(){\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        templateUrl: templateUrl,\n        scope: true,\n        controller: 'ngTableFilterRowController'\n    };\n    return directive;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableFilterRow.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IScope } from 'angular';\nimport { IFilterConfig, IFilterTemplateDef, IFilterTemplateDefMap } from './public-interfaces';\n\n/**\n * @private\n */\nexport interface IScopeExtensions {\n    config: IFilterConfig;\n    getFilterCellCss(filter: IFilterTemplateDefMap, layout: string): string;\n    getFilterPlaceholderValue(filterDef: string | IFilterTemplateDef, filterKey?: string): string;\n}\n\nngTableFilterRowController.$inject = ['$scope', 'ngTableFilterConfig'];\n\n/**\n * Controller for the {@link ngTableFilterRow ngTableFilterRow} directive\n */\nexport function ngTableFilterRowController($scope: IScope & IScopeExtensions, ngTableFilterConfig: IFilterConfig){\n\n    $scope.config = ngTableFilterConfig;\n\n    $scope.getFilterCellCss = function (filter: IFilterTemplateDefMap, layout: string) {\n        if (layout !== 'horizontal') {\n            return 's12';\n        }\n\n        var size = Object.keys(filter).length;\n        var width = parseInt((12 / size).toString(), 10);\n        return 's' + width;\n    };\n\n    $scope.getFilterPlaceholderValue = function(filterDef: string | IFilterTemplateDef, filterKey?: string){\n        if (typeof filterDef === 'string') {\n            return '';\n        } else {\n            return filterDef.placeholder;\n        }\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableFilterRowController.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nvar templateUrl = require('./groupRow.html');\n\nngTableGroupRow.$inject = [];\n\n/**\n * directive that renders the group header row for a table \n * @ngdoc directive\n * @example\n * ```html\n * <ng-table-group-row></ng-table-group-row>\n * ```\n */\nexport function ngTableGroupRow(){\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        templateUrl: templateUrl,\n        scope: true,\n        controller: 'ngTableGroupRowController',\n        controllerAs: 'dctrl'\n    };\n    return directive;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableGroupRow.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IPromise } from 'angular';\nimport { DataResult, IGroupingFunc, Grouping } from '../core';\nimport { IColumnDef } from './public-interfaces';\nimport { ITableScope } from './ngTableController';\n\n/**\n * @private\n */\nexport interface IScopeExtensions<T> {\n    $selGroup: IGroupingFunc<any> | string;\n    $selGroupTitle: string;\n    getGroupables(): Array<IGroupingFunc<any> | IColumnDef>\n    getGroupTitle(group: IGroupingFunc<any> | IColumnDef): string;\n    getVisibleColumns(): IColumnDef[];\n    groupBy(group: IGroupingFunc<any> | IColumnDef): void;\n    isSelectedGroup(group: IGroupingFunc<any> | IColumnDef): boolean;\n    toggleDetail(): IPromise<Array<DataResult<T>>>\n}\n\nngTableGroupRowController.$inject = ['$scope'];\n\n/**\n * Controller for the {@link ngTableGroupRow ngTableGroupRow} directive\n */\nexport function ngTableGroupRowController<T>($scope: ITableScope<T> & IScopeExtensions<T>){\n\n    var groupFns: Array<IGroupingFunc<any> | IColumnDef> = [];\n\n    init();\n\n    function init(){\n        $scope.getGroupables = getGroupables;\n        $scope.getGroupTitle = getGroupTitle;\n        $scope.getVisibleColumns = getVisibleColumns;\n        $scope.groupBy = groupBy;\n        $scope.isSelectedGroup = isSelectedGroup;\n        $scope.toggleDetail = toggleDetail;\n\n        $scope.$watch('params.group()', setGroup, true);\n    }\n\n    function changeSortDirection(){\n        var newDirection: string;\n        if ($scope.params.hasGroup($scope.$selGroup, 'asc')) {\n            newDirection = 'desc';\n        } else if ($scope.params.hasGroup($scope.$selGroup, 'desc')){\n            newDirection = '';\n        } else {\n            newDirection = 'asc';\n        }\n        $scope.params.group($scope.$selGroup, newDirection);\n    }\n\n    function findGroupColumn(groupKey: IGroupingFunc<any> | string) {\n        return $scope.$columns.filter(function ($column) {\n            return $column.groupable($scope) === groupKey;\n        })[0];\n    }\n\n    function getGroupTitle(group: IGroupingFunc<any> | IColumnDef){\n        return isGroupingFunc(group) ? group.title : group.title($scope);\n    }\n\n    function getGroupables(){\n        var groupableCols = $scope.$columns.filter(function ($column) {\n            return !!$column.groupable($scope);\n        });\n        return groupFns.concat(groupableCols);\n    }\n\n    function getVisibleColumns(){\n        return $scope.$columns.filter(function($column){\n            return $column.show($scope);\n        })\n    }\n\n    function groupBy(group: IGroupingFunc<any> | IColumnDef){\n        if (isSelectedGroup(group)){\n            changeSortDirection();\n        } else {\n            if (isGroupingFunc(group)){\n                $scope.params.group(group);\n            } else{\n                // it's OK, we know that groupable will return a string\n                // this is guaranteed by getGroupables returning only\n                // columns that return (truthy) strings\n                $scope.params.group(group.groupable($scope) as string);\n            }\n        }\n    }\n\n    function isGroupingFunc(val: IColumnDef | Grouping<any>): val is IGroupingFunc<any> {\n        return typeof val === 'function';\n    }\n\n    function isSelectedGroup(group: IGroupingFunc<any> | IColumnDef){\n        if (isGroupingFunc(group)){\n            return group === $scope.$selGroup;\n        } else {\n            return group.groupable($scope) === $scope.$selGroup;\n        }\n    }\n\n    function setGroup(grouping: Grouping<any>){\n        var existingGroupCol = findGroupColumn($scope.$selGroup);\n        if (existingGroupCol && existingGroupCol.show.assign){\n            existingGroupCol.show.assign($scope, true);\n        }\n        if (isGroupingFunc(grouping)) {\n            groupFns = [grouping];\n            $scope.$selGroup = grouping;\n            $scope.$selGroupTitle = grouping.title;\n        } else {\n            // note: currently only one group is implemented\n            var groupKey = Object.keys(grouping || {})[0];\n            var groupedColumn = findGroupColumn(groupKey);\n            if (groupedColumn) {\n                $scope.$selGroupTitle = groupedColumn.title($scope);\n                $scope.$selGroup = groupKey;\n                if (groupedColumn.show.assign) {\n                    groupedColumn.show.assign($scope, false);\n                }\n            }\n        }\n    }\n\n    function toggleDetail(){\n        $scope.params.settings().groupOptions.isExpanded = !$scope.params.settings().groupOptions.isExpanded;\n        return $scope.params.reload();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableGroupRowController.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { IEventsChannel, IPageButton } from '../core'\nimport { ITableScope } from './ngTableController';\n\ninterface IScopeExtensions {\n    pages: IPageButton[]\n}\n\nngTablePagination.$inject = ['$compile', '$document', 'ngTableEventsChannel'];\n\n/**\n * Directive that renders the table pagination controls\n * @ngdoc directive\n */\nexport function ngTablePagination<T>($compile: ng1.ICompileService, $document: ng1.IDocumentService, ngTableEventsChannel: IEventsChannel): ng1.IDirective {\n\n    return {\n        restrict: 'A',\n        scope: {\n            'params': '=ngTablePagination',\n            'templateUrl': '='\n        },\n        replace: false,\n        link: function(scope: ITableScope<T> & IScopeExtensions, element: ng1.IAugmentedJQuery/*, attrs*/) {\n\n            ngTableEventsChannel.onAfterReloadData<T>(function(pubParams) {\n                scope.pages = pubParams.generatePagesArray();\n            }, scope, function(pubParams){\n                return pubParams === scope.params;\n            });\n\n            scope.$watch<string>('templateUrl', function(templateUrl) {\n                if (templateUrl === undefined) {\n                    return;\n                }\n                var template = ng1.element('<div ng-include=\"templateUrl\"></div>', $document);\n                element.append(template);\n                $compile(template)(scope);\n            });\n        }\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTablePagination.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { IColumnDef, SelectData, ISelectDataFunc, ISelectOption } from './public-interfaces';\n\ninterface IInputAttributes extends ng1.IAttributes {\n    ngTableSelectFilterDs: string;\n}\n\ninterface IScopeExtensions {\n    $selectData: ISelectOption[]\n}\n\nngTableSelectFilterDs.$inject = [];\n\n/**\n * Takes the array returned by $column.filterData and makes it available as `$selectData` on the `$scope`.\n *\n * The resulting `$selectData` array will contain an extra item that is suitable to represent the user\n * \"deselecting\" an item from a `<select>` tag\n *\n * This directive is is focused on providing a datasource to an `ngOptions` directive\n * @ngdoc directive\n * @private\n */\nfunction ngTableSelectFilterDs(): ng1.IDirective{\n    // note: not using isolated or child scope \"by design\"\n    // this is to allow this directive to be combined with other directives that do\n\n    var directive = {\n        restrict: 'A',\n        controller: ngTableSelectFilterDsController\n    };\n    return directive;\n}\n\nngTableSelectFilterDsController.$inject = ['$scope', '$parse', '$attrs', '$q'];\nfunction ngTableSelectFilterDsController($scope: ng1.IScope & IScopeExtensions, $parse: ng1.IParseService, $attrs: IInputAttributes, $q: ng1.IQService){\n\n    var $column: IColumnDef;\n    init();\n\n    function init(){\n        $column = $parse($attrs.ngTableSelectFilterDs)($scope);\n        $scope.$watch<SelectData>(function(){\n            return $column && $column.data;\n        }, bindDataSource);\n    }\n\n    function bindDataSource(){\n        getSelectListData($column).then(function(data){\n            if (data && !hasEmptyOption(data)){\n                data.unshift({ id: '', title: ''});\n            }\n            data = data || [];\n            $scope.$selectData = data;\n        });\n    }\n\n    function hasEmptyOption(data: ISelectOption[]) {\n        var isMatch: boolean;\n        for (var i = 0; i < data.length; i++) {\n            var item = data[i];\n            if (item && item.id === '') {\n                isMatch = true;\n                break;\n            }\n        }\n        return isMatch;\n    }\n\n    function getSelectListData($column: IColumnDef) {\n        var dataInput = $column.data;\n        if (dataInput instanceof Array) {\n            return $q.when(dataInput);\n        } else {\n            return $q.when(dataInput && dataInput());\n        }\n    }\n}\n\nexport { ngTableSelectFilterDs };\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableSelectFilterDs.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nvar templateUrl = require('./sorterRow.html');\n\nngTableSorterRow.$inject = [];\n\n/**\n * directive that renders the sorting header row for a table \n * @ngdoc directive\n * @example\n * ```html\n * <ng-table-sorter-row></ng-table-sorter-row>\n * ```\n */\nexport function ngTableSorterRow(){\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        templateUrl: templateUrl,\n        scope: true,\n        controller: 'ngTableSorterRowController'\n    };\n    return directive;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableSorterRow.directive.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\nimport { IAngularEvent } from 'angular';\nimport { ISortingValues } from '../core';\nimport { IColumnDef } from './public-interfaces';\nimport { ITableScope } from './ngTableController';\n\n/**\n * @private\n */\nexport interface IScopeExtensions {\n    sortBy($column: IColumnDef, event: IAugmentedMouseEvent): void;\n}\n\n/**\n * @private\n */\nexport interface IAugmentedMouseEvent extends IAngularEvent {\n    ctrlKey: boolean;\n    metaKey: boolean;\n}\n\nngTableSorterRowController.$inject = ['$scope'];\n\n/**\n * Controller for the {@link ngTableSorterRow ngTableSorterRow} directive\n */\nexport function ngTableSorterRowController<T>($scope: ITableScope<T> & IScopeExtensions) {\n\n    $scope.sortBy = sortBy;\n\n    ///////////\n\n    function sortBy($column: IColumnDef, event: IAugmentedMouseEvent) {\n        var parsedSortable = $column.sortable && $column.sortable();\n        if (!parsedSortable || typeof parsedSortable !== 'string') {\n            return;\n        } else {\n            var defaultSort = $scope.params.settings().defaultSort;\n            var inverseSort = (defaultSort === 'asc' ? 'desc' : 'asc');\n            var sorting = $scope.params.sorting() && $scope.params.sorting()[parsedSortable] && ($scope.params.sorting()[parsedSortable] === defaultSort);\n            var sortingParams: ISortingValues = (event.ctrlKey || event.metaKey) ? $scope.params.sorting() : {};\n            sortingParams[parsedSortable] = (sorting ? inverseSort : defaultSort);\n            $scope.params.parameters({\n                sorting: sortingParams\n            });\n        }\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/browser/ngTableSorterRowController.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { IDefaultGetDataProvider, IDefaultGetData, IFilterFunc, INgTableParams } from './public-interfaces';\n\n/**\n * Allows for the configuration of the ngTableDefaultGetData service.\n *\n * Set filterFilterName to the name of a angular filter that knows how to apply the values returned by\n * `NgTableParams.filter()` to restrict an array of data.\n *\n * Set sortingFilterName to the name of a angular filter that knows how to apply the values returned by\n * `NgTableParams.orderBy()` to sort an array of data.\n *\n * Out of the box the `ngTableDefaultGetData` service will be configured to use the angular `filter` and `orderBy`\n * filters respectively\n * \n * @ngdoc provider\n */\nexport class ngTableDefaultGetDataProvider implements IDefaultGetDataProvider {\n    filterFilterName = 'filter';\n    sortingFilterName = 'orderBy';\n    $get: ($filter: ng1.IFilterService) => IDefaultGetData<any>;\n    constructor() {\n        var provider = this;\n        this.$get = ngTableDefaultGetData;\n\n        ngTableDefaultGetData.$inject = ['$filter'];\n\n        /**\n         * Implementation of the {@link IDefaultGetData IDefaultGetData} interface\n         * \n         * @ngdoc service\n         */\n        function ngTableDefaultGetData<T>($filter: ng1.IFilterService): IDefaultGetData<T> {\n\n            var defaultDataOptions = { applyFilter: true, applySort: true, applyPaging: true };\n\n            (getData as IDefaultGetData<T>).applyPaging = applyPaging;\n            (getData as IDefaultGetData<T>).getFilterFn = getFilterFn;\n            (getData as IDefaultGetData<T>).getOrderByFn = getOrderByFn;\n\n            return getData as IDefaultGetData<T>;\n\n            function getFilterFn(params: INgTableParams<T>): IFilterFunc<T> {\n                var filterOptions = params.settings().filterOptions;\n                if (ng1.isFunction(filterOptions.filterFn)) {\n                    return filterOptions.filterFn;\n                } else {\n                    return $filter<ng1.IFilterFilter>(filterOptions.filterFilterName || provider.filterFilterName);\n                }\n            }\n\n            function getOrderByFn(params: INgTableParams<T>) {\n                return $filter<ng1.IFilterOrderBy>(provider.sortingFilterName);\n            }\n\n            function applyFilter(data: T[], params: INgTableParams<T>): T[] {\n                if (!params.hasFilter()) {\n                    return data;\n                }\n\n                var filter = params.filter(true);\n                var filterKeys = Object.keys(filter);\n                var parsedFilter = filterKeys.reduce(function (result, key) {\n                    result = setPath(result, filter[key], key);\n                    return result;\n                }, {});\n                var filterFn = getFilterFn(params);\n                return filterFn.call(params, data, parsedFilter, params.settings().filterOptions.filterComparator);\n            }\n\n            function applyPaging(data: T[], params: INgTableParams<T>): T[] {\n                var pagedData = data.slice((params.page() - 1) * params.count(), params.page() * params.count());\n                params.total(data.length); // set total for recalc pagination\n                return pagedData;\n            }\n\n            function applySort(data: T[], params: INgTableParams<T>): T[] {\n                var orderBy = params.orderBy();\n                var orderByFn = getOrderByFn(params);\n                return orderBy.length ? orderByFn(data, orderBy) : data;\n            }\n\n            function getData(data: T[], params: INgTableParams<T>): T[] {\n                if (data == null) {\n                    return [];\n                }\n\n                var options = ng1.extend({}, defaultDataOptions, params.settings().dataOptions);\n\n                var fData = options.applyFilter ? applyFilter(data, params) : data;\n                var orderedData = options.applySort ? applySort(fData, params) : fData;\n                return options.applyPaging ? applyPaging(orderedData, params) : orderedData;\n            }\n\n            // Sets the value at any depth in a nested object based on the path\n            // note: adapted from: underscore-contrib#setPath\n            function setPath(obj: any, value: any, path: string) {\n                var keys = path.split('.');\n                var ret = obj;\n                var lastKey = keys[keys.length - 1];\n                var target = ret;\n\n                var parentPathKeys = keys.slice(0, keys.length - 1);\n                parentPathKeys.forEach(function (key) {\n                    if (!target.hasOwnProperty(key)) {\n                        target[key] = {};\n                    }\n                    target = target[key];\n                });\n\n                target[lastKey] = value;\n                return ret;\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/ngTableDefaultGetData.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport { IDefaults } from './public-interfaces';\n\n/**\n * Default values for ngTable\n * @ngdoc object\n */\nexport var ngTableDefaults : IDefaults = {\n    params: {},\n    settings: {}\n};\n\n\n// WEBPACK FOOTER //\n// ./src/core/ngTableDefaults.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { IEventsChannel, InternalTableParams, INgTableParams } from './public-interfaces';\n\nngTableEventsChannel.$inject = ['$rootScope'];\n\n/**\n * Implementation of the {@link IEventsChannel IEventsChannel} interface\n * @ngdoc service\n */\nexport function ngTableEventsChannel($rootScope: ng1.IRootScopeService): IEventsChannel {\n\n    var events = {};\n    events = addTableParamsEvent('afterCreated', events);\n    events = addTableParamsEvent('afterReloadData', events);\n    events = addTableParamsEvent('datasetChanged', events);\n    events = addTableParamsEvent('pagesChanged', events);\n    return events as IEventsChannel;\n\n    //////////\n\n    function addTableParamsEvent(eventName: string, target: {}){\n        var fnName = eventName.charAt(0).toUpperCase() + eventName.substring(1);\n        var event = {\n            ['on' + fnName]: createEventSubscriptionFn(eventName),\n            ['publish' + fnName]: createPublishEventFn(eventName)\n        };\n        return ng1.extend(target, event);\n    }\n\n    type EventSelector = INgTableParams<any>|((publisher: INgTableParams<any>) => boolean);\n\n    function createEventSubscriptionFn(eventName: string){\n        \n        return function subscription(\n            handler: (...args: any[]) => void, \n            eventSelectorOrScope: EventSelector|ng1.IScope, \n            eventSelector?: EventSelector) {\n\n            var actualEvtSelector: (publisher: INgTableParams<any>) => boolean;\n            var scope: ng1.IScope = $rootScope;\n\n            if (isScopeLike(eventSelectorOrScope)) {\n                scope = eventSelectorOrScope;\n                actualEvtSelector = createEventSelectorFn(eventSelector);\n            } else {\n                actualEvtSelector = createEventSelectorFn(eventSelectorOrScope);\n            }\n\n            return scope.$on('ngTable:' + eventName, function(event: ng1.IAngularEvent, params: InternalTableParams<any>, ...eventArgs: any[]){\n                // don't send events published by the internal NgTableParams created by ngTableController\n                if (params.isNullInstance) return;\n\n                var fnArgs = [params].concat(eventArgs);\n                if (actualEvtSelector.apply(this, fnArgs)){\n                    handler.apply(this, fnArgs);\n                }\n            });\n        }\n\n        function createEventSelectorFn(eventSelector: EventSelector): (publisher: INgTableParams<any>) => boolean {\n            if (!eventSelector) {\n                return (publisher: INgTableParams<any>) => true;\n            } else if (isEventSelectorFunc(eventSelector)) {\n                return eventSelector\n            } else {\n                // shorthand for subscriber to only receive events from a specific publisher instance\n                return (publisher: INgTableParams<any>) => publisher === eventSelector;\n            }\n        }\n\n        function isEventSelectorFunc(val: EventSelector): val is (publisher: INgTableParams<any>) => boolean {\n            return typeof val === 'function';\n        }\n\n        function isScopeLike(val: any): val is ng1.IScope {\n            return val && typeof val.$new === 'function';\n        }\n    }\n\n    function createPublishEventFn(eventName: string){\n        return function publish(...args: any[]){\n            $rootScope.$broadcast('ngTable:' + eventName, ...args);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/ngTableEventsChannel.ts","/**\n * ngTable: Table + Angular JS\n *\n * @author Vitalii Savchuk <esvit666@gmail.com>\n * @url https://github.com/esvit/ng-table/\n * @license New BSD License <http://creativecommons.org/licenses/BSD/>\n */\n\nimport * as ng1 from 'angular';\nimport { \n    IDataRowGroup, IDefaults, IDefaultGetData, IEventsChannel, IFilterSettings, IFilterValues, IGetDataFunc, Grouping, \n    IGroupValues, IGroupingFunc, IGroupSettings, IPageButton, IParamValues, ISettings, ISortingValues, INgTableParams, \n    ITableParamsConstructor } from './public-interfaces'\n\nngTableParamsFactory.$inject = [\n    '$q', '$log', '$filter', 'ngTableDefaults', 'ngTableDefaultGetData', 'ngTableEventsChannel'\n];\n\n/**\n * Implmenentation of the {@link INgTableParams INgTableParams} interface\n * @ngdoc service\n */\nexport function ngTableParamsFactory<T>(\n    $q: ng1.IQService, $log: ng1.ILogService, $filter: ng1.IFilterService, ngTableDefaults: IDefaults, \n    ngTableDefaultGetData: IDefaultGetData<any>, ngTableEventsChannel: IEventsChannel) {\n\n    return NgTableParams;\n    \n\n    function NgTableParams<T>(baseParameters: IParamValues<T> | boolean, baseSettings: ISettings<T>): INgTableParams<T> {\n\n        type Memento = {\n            params: IParamValues<T>;\n            groupSortDirection?: string;\n        };\n\n        function isNumber(n: any) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        // the ngTableController \"needs\" to create a dummy/null instance and it's important to know whether an instance\n        // is one of these\n        if (typeof baseParameters === \"boolean\"){\n            this.isNullInstance = true;\n        }\n\n        var self: INgTableParams<T> = this,\n            prevParamsMemento: Memento,\n            errParamsMemento: Memento,\n            isCommittedDataset = false,\n            initialEvents: Function[] = [],\n            log = function(...args: any[]) {\n                if (_settings.debugMode && $log.debug) {\n                    $log.debug(...args);\n                }\n            },\n            defaultFilterOptions: IFilterSettings<T> = {\n                filterComparator: undefined, // look for a substring match in case insensitive way\n                filterDelay: 500,\n                filterDelayThreshold: 10000, // size of dataset array that will trigger the filterDelay being applied\n                filterFilterName: undefined, // when defined overrides ngTableDefaultGetDataProvider.filterFilterName\n                filterFn: undefined, // when defined overrides the filter function that ngTableDefaultGetData uses\n                filterLayout: 'stack' // alternative: 'horizontal'\n            },\n            defaultGroupOptions: IGroupSettings = {\n                defaultSort: 'asc', // set to 'asc' or 'desc' to apply sorting to groups\n                isExpanded: true\n            },\n            defaultSettingsFns = getDefaultSettingFns();\n\n        this.data = [];\n\n        this.parameters = function(newParameters?: IParamValues<T>| { [name: string]: string }, parseParamsFromUrl?: boolean) {\n            parseParamsFromUrl = parseParamsFromUrl || false;\n            if (typeof newParameters !== undefined) {\n                for (var key in newParameters) {\n                    var value = newParameters[key];\n                    if (parseParamsFromUrl && key.indexOf('[') >= 0) {\n                        var keys = key.split(/\\[(.*)\\]/).reverse()\n                        var lastKey = '';\n                        for (var i = 0, len = keys.length; i < len; i++) {\n                            var name = keys[i];\n                            if (name !== '') {\n                                var v = value;\n                                value = {};\n                                value[lastKey = name] = (isNumber(v) ? parseFloat(v) : v);\n                            }\n                        }\n                        if (lastKey === 'sorting') {\n                            _params[lastKey] = {};\n                        }\n                        _params[lastKey] = ng1.extend(_params[lastKey] || {}, value[lastKey]);\n                    } else {\n                        if (key === 'group'){\n                            _params[key] = parseGroup(newParameters[key]);\n                        } else {\n                            _params[key] = (isNumber(newParameters[key]) ? parseFloat(newParameters[key]) : newParameters[key]);\n                        }\n                    }\n                }\n                log('ngTable: set parameters', _params);\n                return this;\n            }\n            return _params;\n        };\n\n        function parseGroup(group: string | Grouping<T>){\n            var defaultSort = _settings.groupOptions && _settings.groupOptions.defaultSort;\n            if (!group) {\n                return group;\n            } else if (isGroupingFun(group)) {\n                if (group.sortDirection == null){\n                    group.sortDirection = defaultSort;\n                }\n                return group;\n            } else if (typeof group === 'object') {\n                for (var key in group) {\n                    if (group[key] == null){\n                        group[key] = defaultSort;\n                    }\n                }\n                return group;\n            } else {\n                return {\n                    [group]: defaultSort\n                };\n            }\n        }\n\n        /**\n         * @ngdoc method\n         * @name NgTableParams#settings\n         * @description Set new settings for table\n         *\n         * @param {string} newSettings New settings or undefined\n         * @returns {Object} Current settings or `this`\n         */\n        this.settings = function(newSettings?: ISettings<T>) {\n            if (ng1.isDefined(newSettings)) {\n\n                // todo: don't modify newSettings object: this introduces unexpected side effects;\n                // instead take a copy of newSettings\n\n                if (newSettings.filterOptions){\n                    newSettings.filterOptions = ng1.extend({}, _settings.filterOptions, newSettings.filterOptions);\n                }\n                if (newSettings.groupOptions){\n                    newSettings.groupOptions = ng1.extend({}, _settings.groupOptions, newSettings.groupOptions);\n                }\n\n                if (ng1.isArray(newSettings.dataset)) {\n                    //auto-set the total from passed in dataset\n                    newSettings.total = newSettings.dataset.length;\n                }\n\n                var originalDataset = _settings.dataset;\n                _settings = ng1.extend(_settings, newSettings);\n\n                if (ng1.isArray(newSettings.dataset)) {\n                    optimizeFilterDelay();\n                }\n\n                // note: using != as want null and undefined to be treated the same\n                var hasDatasetChanged = newSettings.hasOwnProperty('dataset') && (newSettings.dataset != originalDataset);\n                if (hasDatasetChanged) {\n                    if (isCommittedDataset){\n                        this.page(1); // reset page as a new dataset has been supplied\n                    }\n                    isCommittedDataset = false;\n\n                    var fireEvent = function () {\n                        ngTableEventsChannel.publishDatasetChanged(self, newSettings.dataset, originalDataset);\n                    };\n\n                    if (initialEvents){\n                        initialEvents.push(fireEvent);\n                    } else {\n                        fireEvent();\n                    }\n                }\n                log('ngTable: set settings', _settings);\n                return this;\n            }\n            return _settings;\n        };\n\n        this.page = function(page?: number) {\n            return page !== undefined ? this.parameters({\n                'page': page\n            }) : _params.page;\n        };\n\n        this.total = function(total?: number) {\n            return total !== undefined ? this.settings({\n                'total': total\n            }) : _settings.total;\n        };\n\n        this.count = function(count?: number) {\n            // reset to first page because can be blank page\n            return count !== undefined ? this.parameters({\n                'count': count,\n                'page': 1\n            }) : _params.count;\n        };\n\n        this.filter = function(filter?: IFilterValues | boolean) {\n            if (filter != null && typeof filter === 'object') {\n                return this.parameters({\n                    'filter': filter,\n                    'page': 1\n                });\n            } else if (filter === true){\n                var keys = Object.keys(_params.filter);\n                var significantFilter: IFilterValues = {};\n                for (var i=0; i < keys.length; i++){\n                    var filterValue = _params.filter[keys[i]];\n                    if (filterValue != null && filterValue !== '') {\n                        significantFilter[keys[i]] = filterValue;\n                    }\n                }\n                return significantFilter;\n            } else {\n                return _params.filter;\n            }\n        };\n\n        this.group = function(group?: Grouping<T> | string, sortDirection?: string) {\n            if (group === undefined){\n                return _params.group;\n            }\n\n            var newParameters: IParamValues<T> = {\n                page: 1\n            };\n            if (isGroupingFun(group) && sortDirection !== undefined){\n                group.sortDirection = sortDirection;\n                newParameters.group = group;\n            } else if (typeof group === 'string' && sortDirection !== undefined) {\n                newParameters.group = { [group]: sortDirection };\n            } else {\n                newParameters.group = group;\n            }\n            this.parameters(newParameters);\n            return this;\n        };\n\n        /**\n         * @ngdoc method\n         * @name NgTableParams#sorting\n         * @description If 'sorting' parameter is not set, return current sorting. Otherwise set current sorting.\n         *\n         * @param {string} sorting New sorting\n         * @returns {Object} Current sorting or `this`\n         */\n        this.sorting = function(sorting?: ISortingValues | string, direction?: string) {\n            if (typeof sorting === 'string' && direction !== undefined) {\n                this.parameters({\n                    'sorting': { [sorting]: direction }\n                });\n                return this;\n            }\n            return sorting !== undefined ? this.parameters({\n                'sorting': sorting\n            }) : _params.sorting;\n        };\n\n        this.isSortBy = function(field: string, direction?: string) {\n            if(direction !== undefined) {\n                return _params.sorting[field] !== undefined && _params.sorting[field] == direction;\n            } else {\n                return _params.sorting[field] !== undefined;\n            }\n        };\n\n        /**\n         * @ngdoc method\n         * @name NgTableParams#orderBy\n         * @description Return object of sorting parameters for angular filter\n         *\n         * @returns {Array} Array like: [ '-name', '+age' ]\n         */\n        this.orderBy = function() {\n            return convertSortToOrderBy(_params.sorting);\n        };\n\n        function convertSortToOrderBy(sorting: ISortingValues){\n            var result: string[] = [];\n            for (var column in sorting) {\n                result.push((sorting[column] === \"asc\" ? \"+\" : \"-\") + column);\n            }\n            return result;\n        }\n\n        /**\n         * @ngdoc method\n         * @name NgTableParams#generatePagesArray\n         * @description Generate array of pages\n         *\n         * When no arguments supplied, the current parameter state of this `NgTableParams` instance will be used\n         *\n         * @param {boolean} currentPage which page must be active\n         * @param {boolean} totalItems  Total quantity of items\n         * @param {boolean} pageSize    Quantity of items on page\n         * @param {number} maxBlocks    Quantity of blocks for pagination\n         * @returns {Array} Array of pages\n         */\n        this.generatePagesArray = function(currentPage?: number, totalItems?: number, pageSize?: number, maxBlocks?: number) {\n            if (!arguments.length){\n                currentPage = this.page();\n                totalItems = this.total();\n                pageSize = this.count();\n            }\n\n            var maxPage: number, maxPivotPages: number, minPage: number, numPages: number;\n            maxBlocks = maxBlocks && maxBlocks < 6 ? 6 : maxBlocks;\n\n            var pages: IPageButton[] = [];\n            numPages = Math.ceil(totalItems / pageSize);\n            if (numPages > 1) {\n                pages.push({\n                    type: 'prev',\n                    number: Math.max(1, currentPage - 1),\n                    active: currentPage > 1\n                });\n                pages.push({\n                    type: 'first',\n                    number: 1,\n                    active: currentPage > 1,\n                    current: currentPage === 1\n                });\n                maxPivotPages = Math.round((_settings.paginationMaxBlocks - _settings.paginationMinBlocks) / 2);\n                minPage = Math.max(2, currentPage - maxPivotPages);\n                maxPage = Math.min(numPages - 1, currentPage + maxPivotPages * 2 - (currentPage - minPage));\n                minPage = Math.max(2, minPage - (maxPivotPages * 2 - (maxPage - minPage)));\n                var i = minPage;\n                while (i <= maxPage) {\n                    if ((i === minPage && i !== 2) || (i === maxPage && i !== numPages - 1)) {\n                        pages.push({\n                            type: 'more',\n                            active: false\n                        });\n                    } else {\n                        pages.push({\n                            type: 'page',\n                            number: i,\n                            active: currentPage !== i,\n                            current: currentPage === i\n                        });\n                    }\n                    i++;\n                }\n                pages.push({\n                    type: 'last',\n                    number: numPages,\n                    active: currentPage !== numPages,\n                    current: currentPage === numPages\n                });\n                pages.push({\n                    type: 'next',\n                    number: Math.min(numPages, currentPage + 1),\n                    active: currentPage < numPages\n                });\n            }\n            return pages;\n        };\n\n        /**\n         * @ngdoc method\n         * @name NgTableParams#isDataReloadRequired\n         * @description Return true when a change to this `NgTableParams` instance should require the reload method\n         * to be run so as to ensure the data presented to the user reflects the `NgTableParams`\n         *\n         * Note that this method will return false when the reload method has run but fails. In this case\n         * `hasErrorState` will return true.\n         */\n        this.isDataReloadRequired = function(){\n            // note: using != as want to treat null and undefined the same\n            return !isCommittedDataset || !ng1.equals(createComparableParams(), prevParamsMemento)\n                || hasGlobalSearchFieldChanges();\n        };\n\n        function createComparableParams(): Memento {\n            var group = _params.group;\n            return {\n                params: _params,\n                groupSortDirection: isGroupingFun(group) ? group.sortDirection : undefined\n            };\n        }\n        function isGroupingFun(val: string | Grouping<T>): val is IGroupingFunc<T> {\n                return typeof val === 'function'\n        }\n        /**\n         * @ngdoc method\n         * @name NgTableParams#hasFilter\n         * @description Determines if NgTableParams#filter has significant filter value(s)\n         * (any value except null, undefined, or empty string)\n         * @returns {Boolean} true when NgTableParams#filter has at least one significant field value\n         */\n        this.hasFilter = function(){\n            return Object.keys(this.filter(true)).length > 0;\n        };\n\n        this.hasGroup = function(group?: IGroupingFunc<T> | string, sortDirection?: string){\n            if (group == null) {\n                return isGroupingFun(_params.group) || Object.keys(_params.group).length > 0\n            }\n\n            if (isGroupingFun(group)) {\n                if (sortDirection == null) {\n                    return _params.group === group;\n                } else {\n                    return _params.group === group && group.sortDirection === sortDirection;\n                }\n            } else {\n                if (sortDirection == null) {\n                    return Object.keys(_params.group).indexOf(group) !== -1;\n                } else {\n                    return( _params.group as IGroupValues)[group] === sortDirection;\n                }\n            }\n        };\n\n        this.hasFilterChanges = function(){\n            var previousFilter = (prevParamsMemento && prevParamsMemento.params.filter);\n            return !ng1.equals((_params.filter), previousFilter) || hasGlobalSearchFieldChanges();\n        };\n\n        function hasGlobalSearchFieldChanges(){\n            var currentVal = (_params.filter && _params.filter['$']);\n            var previousVal =\n                (prevParamsMemento && prevParamsMemento.params.filter && prevParamsMemento.params.filter['$']);\n            return !ng1.equals(currentVal, previousVal);\n        }\n\n        this.url = function(asString?: boolean) {\n            // this function is an example of Typescript gone bad!!\n            asString = asString || false;\n            var pairs: any[] | { [name: string]: string } = (asString ? [] : {});\n            for (var key in _params) {\n                if (_params.hasOwnProperty(key)) {\n                    var item = (_params as { [name: string]: any })[key],\n                        name = encodeURIComponent(key);\n                    if (typeof item === \"object\") {\n                        for (var subkey in item) {\n                            if (isSignificantValue(item[subkey], key)) {\n                                var pname = name + \"[\" + encodeURIComponent(subkey) + \"]\";\n                                collectValue(item[subkey], pname);\n                            }\n                        }\n                    } else if (!ng1.isFunction(item) && isSignificantValue(item, key)) {\n                        collectValue(item, name);\n                    }\n                }\n            }\n            return pairs;\n\n            function collectValue(value: any, key: string){\n                if (isArray(pairs)) {\n                    pairs.push(key + \"=\" + encodeURIComponent(value));\n                } else {\n                    pairs[key] = encodeURIComponent(value);\n                }\n            }\n\n            function isArray(pairs: any[] | {}): pairs is Array<any> {\n                return asString;\n            }\n\n            function isSignificantValue(value: any, key: string){\n                return key === \"group\" ? true : typeof value !== undefined && value !== \"\";\n            }\n        };\n\n        this.reload = function() {\n            var self: INgTableParams<T> = this,\n                pData: ng1.IPromise<any> = null;\n\n            _settings.$loading = true;\n\n            prevParamsMemento = ng1.copy(createComparableParams());\n            isCommittedDataset = true;\n\n            if (self.hasGroup()) {\n                pData = runInterceptorPipeline($q.when(_settings.getGroups(self)));\n            } else {\n                const fn = _settings.getData as IGetDataFunc<T>;\n                pData = runInterceptorPipeline($q.when(fn(self)));\n            }\n\n            log('ngTable: reload data');\n\n            var oldData = self.data;\n            return pData.then(function(data) {\n                _settings.$loading = false;\n                errParamsMemento = null;\n\n                self.data = data;\n                // note: I think it makes sense to publish this event even when data === oldData\n                // subscribers can always set a filter to only receive the event when data !== oldData\n                ngTableEventsChannel.publishAfterReloadData(self, data, oldData);\n                self.reloadPages();\n\n                return data;\n            }).catch(function(reason){\n                errParamsMemento = prevParamsMemento;\n                // \"rethrow\"\n                return $q.reject(reason);\n            });\n        };\n\n        this.hasErrorState = function(){\n            return !!(errParamsMemento && ng1.equals(errParamsMemento, createComparableParams()));\n        };\n\n        function optimizeFilterDelay(){\n            // don't debounce by default filter input when working with small synchronous datasets\n            if (_settings.filterOptions.filterDelay === defaultFilterOptions.filterDelay &&\n                _settings.total <= _settings.filterOptions.filterDelayThreshold &&\n                _settings.getData === defaultSettingsFns.getData){\n                _settings.filterOptions.filterDelay = 0;\n            }\n        }\n\n        this.reloadPages = (function() {\n            var currentPages: IPageButton[];\n            return function(){\n                var oldPages = currentPages;\n                var newPages = self.generatePagesArray(self.page(), self.total(), self.count());\n                if (!ng1.equals(oldPages, newPages)){\n                    currentPages = newPages;\n                    ngTableEventsChannel.publishPagesChanged(this, newPages, oldPages);\n                }\n            }\n        })();\n\n        function runInterceptorPipeline(fetchedData: ng1.IPromise<any>){\n            var interceptors = _settings.interceptors || [];\n\n            return interceptors.reduce(function(result, interceptor){\n                var thenFn = (interceptor.response && interceptor.response.bind(interceptor)) || $q.when;\n                var rejectFn = (interceptor.responseError && interceptor.responseError.bind(interceptor)) || $q.reject;\n                return result.then(function(data){\n                    return thenFn(data, self);\n                }, function(reason){\n                    return rejectFn(reason, self);\n                });\n            }, fetchedData);\n        }\n\n        function getDefaultSettingFns(){\n\n            return {\n                getData: getData,\n                getGroups: getGroups\n            };\n\n            /**\n             * @ngdoc method\n             * @name settings#getData\n             * @description Returns the data to display in the table\n             *\n             * Called by `NgTableParams` whenever it considers new data is to be loaded\n             *\n             * @param {Object} params the `NgTableParams` requesting data\n             */\n            function getData(params: INgTableParams<T>) {\n                return ngTableDefaultGetData(params.settings().dataset, params);\n            }\n\n            /**\n             * @ngdoc method\n             * @name settings#getGroups\n             * @description Return groups of data to display in the table\n             *\n             * Called by `NgTableParams` whenever it considers new data is to be loaded\n             * and when a `group` value has been assigned\n             *\n             * @param {Object} params the `NgTableParams` requesting data\n             */\n            function getGroups(params: INgTableParams<T>) {\n\n                var group = params.group();\n                var groupFn: IGroupingFunc<T>;\n                var sortDirection: string = undefined;\n                if (isGroupingFun(group)) {\n                    groupFn = group;\n                    sortDirection = group.sortDirection;\n                } else {\n                    // currently support for only one group implemented\n                    var groupField = Object.keys(group)[0];\n                    sortDirection = group[groupField];\n                    groupFn = function(item){\n                        return getPath(item, groupField);\n                    };\n                }\n\n                var settings = params.settings();\n                var originalDataOptions = settings.dataOptions;\n                settings.dataOptions = { applyPaging: false };\n                const getData: IGetDataFunc<T> = settings.getData;\n                var gotData = $q.when(getData(params));\n                return gotData.then(function(data) {\n                    var groups: { [name: string]: IDataRowGroup<T> } = {};\n                    ng1.forEach(data, function(item) {\n                        var groupName = groupFn(item);\n                        groups[groupName] = groups[groupName] || {\n                                data: [],\n                                $hideRows: !settings.groupOptions.isExpanded,\n                                value: groupName\n                            };\n                        groups[groupName].data.push(item);\n                    });\n                    var result: IDataRowGroup<T>[] = [];\n                    for (var i in groups) {\n                        result.push(groups[i]);\n                    }\n                    if (sortDirection) {\n                        var orderByFn = ngTableDefaultGetData.getOrderByFn();\n                        var orderBy = convertSortToOrderBy({\n                            value: sortDirection\n                        });\n                        result = orderByFn(result, orderBy);\n                    }\n\n                    return ngTableDefaultGetData.applyPaging(result, params);\n                }).finally(function(){\n                    // restore the real options\n                    settings.dataOptions = originalDataOptions;\n                });\n            }\n\n            function getPath (obj: { [name: string]: any}, ks: string | string[]): any {\n                // origianl source https://github.com/documentcloud/underscore-contrib\n\n                let keys: string[];\n                if (typeof ks === \"string\"){\n                    keys = ks.split(\".\");\n                } else {\n                    keys = ks;\n                }\n\n                // If we have reached an undefined property\n                // then stop executing and return undefined\n                if (obj === undefined) return void 0;\n\n                // If the path array has no more elements, we've reached\n                // the intended property and return its value\n                if (keys.length === 0) return obj;\n\n                // If we still have elements in the path array and the current\n                // value is null, stop executing and return undefined\n                if (obj === null) return void 0;\n\n                return getPath(obj[keys[0]], keys.slice(1));\n            }\n        }\n\n        var _params: IParamValues<T> = {\n            page: 1,\n            count: 10,\n            filter: {},\n            sorting: {},\n            group: {}\n        };\n        ng1.extend(_params, ngTableDefaults.params);\n\n        /**\n         * @ngdoc object\n         * @name settings\n         * @module ngTable\n         * @description configuration settings for `NgTableParams`\n         */\n        var _settings: ISettings<T> = {\n            $loading: false,\n            dataset: null, //allows data to be set when table is initialized\n            total: 0,\n            defaultSort: 'desc',\n            filterOptions: ng1.copy(defaultFilterOptions),\n            groupOptions: ng1.copy(defaultGroupOptions),\n            counts: [10, 25, 50, 100],\n            interceptors: [],\n            paginationMaxBlocks: 11,\n            paginationMinBlocks: 5,\n            sortingIndicator: 'span'\n        };\n\n        this.settings(defaultSettingsFns);\n        this.settings(ngTableDefaults.settings);\n        this.settings(baseSettings);\n        this.parameters(baseParameters, true);\n\n        ngTableEventsChannel.publishAfterCreated(this);\n        // run events during construction after the initial create event. That way a consumer\n        // can subscribe to all events for a table without \"dropping\" an event\n        ng1.forEach(initialEvents, function(event){\n            event();\n        });\n        initialEvents = null;\n\n        return this;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/ngTableParams.ts","var path = 'ng-table/filterRow.html';\nvar html = \"<tr ng-show=\\\"show_filter\\\" class=\\\"ng-table-filters\\\">\\n    <th data-title-text=\\\"{{$column.titleAlt(this) || $column.title(this)}}\\\" ng-repeat=\\\"$column in $columns\\\" ng-if=\\\"$column.show(this)\\\" class=\\\"filter {{$column.class(this)}}\\\"\\n        ng-class=\\\"params.settings().filterOptions.filterLayout === 'horizontal' ? 'filter-horizontal' : ''\\\">\\n        <div ng-repeat=\\\"(name, filter) in $column.filter(this)\\\" ng-include=\\\"config.getTemplateUrl(filter)\\\" class=\\\"filter-cell\\\"\\n             ng-class=\\\"[getFilterCellCss($column.filter(this), params.settings().filterOptions.filterLayout), $last ? 'last' : '']\\\">\\n        </div>\\n    </th>\\n</tr>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/filterRow.html\n// module id = 24\n// module chunks = 0","var path = 'ng-table/filters/number.html';\nvar html = \"<input type=\\\"number\\\" name=\\\"{{name}}\\\" ng-disabled=\\\"$filterRow.disabled\\\" ng-model=\\\"params.filter()[name]\\\" class=\\\"input-filter form-control\\\"\\n       placeholder=\\\"{{getFilterPlaceholderValue(filter, name)}}\\\"/>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/filters/number.html\n// module id = 25\n// module chunks = 0","var path = 'ng-table/filters/select-multiple.html';\nvar html = \"<select ng-options=\\\"data.id as data.title for data in $column.data\\\"\\n        ng-disabled=\\\"$filterRow.disabled\\\"\\n        multiple ng-multiple=\\\"true\\\"\\n        ng-model=\\\"params.filter()[name]\\\"\\n        class=\\\"filter filter-select-multiple form-control\\\" name=\\\"{{name}}\\\">\\n</select>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/filters/select-multiple.html\n// module id = 26\n// module chunks = 0","var path = 'ng-table/filters/select.html';\nvar html = \"<select ng-options=\\\"data.id as data.title for data in $selectData\\\"\\n        ng-table-select-filter-ds=\\\"$column\\\"\\n        ng-disabled=\\\"$filterRow.disabled\\\"\\n        ng-model=\\\"params.filter()[name]\\\"\\n        class=\\\"filter filter-select form-control\\\" name=\\\"{{name}}\\\">\\n    <option style=\\\"display:none\\\" value=\\\"\\\"></option>\\n</select>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/filters/select.html\n// module id = 27\n// module chunks = 0","var path = 'ng-table/filters/text.html';\nvar html = \"<input type=\\\"text\\\" name=\\\"{{name}}\\\" ng-disabled=\\\"$filterRow.disabled\\\" ng-model=\\\"params.filter()[name]\\\" class=\\\"input-filter form-control\\\"\\n       placeholder=\\\"{{getFilterPlaceholderValue(filter, name)}}\\\"/>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/filters/text.html\n// module id = 28\n// module chunks = 0","var path = 'ng-table/groupRow.html';\nvar html = \"<tr ng-if=\\\"params.hasGroup()\\\" ng-show=\\\"$groupRow.show\\\" class=\\\"ng-table-group-header\\\">\\n    <th colspan=\\\"{{getVisibleColumns().length}}\\\" class=\\\"sortable\\\" ng-class=\\\"{\\n                    'sort-asc': params.hasGroup($selGroup, 'asc'),\\n                    'sort-desc':params.hasGroup($selGroup, 'desc')\\n                  }\\\">\\n        <a href=\\\"\\\" ng-click=\\\"isSelectorOpen = !isSelectorOpen\\\" class=\\\"ng-table-group-selector\\\">\\n            <strong class=\\\"sort-indicator\\\">{{$selGroupTitle}}</strong>\\n            <button class=\\\"btn btn-default btn-xs ng-table-group-close\\\"\\n                    ng-click=\\\"$groupRow.show = false; $event.preventDefault(); $event.stopPropagation();\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-default btn-xs ng-table-group-toggle\\\"\\n                    ng-click=\\\"toggleDetail(); $event.preventDefault(); $event.stopPropagation();\\\">\\n                <span class=\\\"glyphicon\\\" ng-class=\\\"{\\n                    'glyphicon-resize-small': params.settings().groupOptions.isExpanded,\\n                    'glyphicon-resize-full': !params.settings().groupOptions.isExpanded\\n                }\\\"></span>\\n            </button>\\n        </a>\\n        <div class=\\\"list-group\\\" ng-if=\\\"isSelectorOpen\\\">\\n            <a href=\\\"\\\" class=\\\"list-group-item\\\" ng-repeat=\\\"group in getGroupables()\\\" ng-click=\\\"groupBy(group)\\\">\\n                <strong>{{ getGroupTitle(group)}}</strong>\\n                <strong ng-class=\\\"isSelectedGroup(group) && 'sort-indicator'\\\"></strong>\\n            </a>\\n        </div>\\n    </th>\\n</tr>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/groupRow.html\n// module id = 29\n// module chunks = 0","var path = 'ng-table/header.html';\nvar html = \"<ng-table-group-row></ng-table-group-row>\\n<ng-table-sorter-row></ng-table-sorter-row>\\n<ng-table-filter-row></ng-table-filter-row>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/header.html\n// module id = 30\n// module chunks = 0","var path = 'ng-table/pager.html';\nvar html = \"<div class=\\\"ng-cloak ng-table-pager\\\" ng-if=\\\"params.data.length\\\">\\n    <div ng-if=\\\"params.settings().counts.length\\\" class=\\\"ng-table-counts btn-group pull-right\\\">\\n        <button ng-repeat=\\\"count in params.settings().counts\\\" type=\\\"button\\\"\\n                ng-class=\\\"{'active':params.count() == count}\\\"\\n                ng-click=\\\"params.count(count)\\\" class=\\\"btn btn-default\\\">\\n            <span ng-bind=\\\"count\\\"></span>\\n        </button>\\n    </div>\\n    <ul ng-if=\\\"pages.length\\\" class=\\\"pagination ng-table-pagination\\\">\\n        <li class=\\\"page-item\\\" ng-class=\\\"{'disabled': !page.active && !page.current, 'active': page.current}\\\" ng-repeat=\\\"page in pages\\\" ng-switch=\\\"page.type\\\">\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"prev\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\">&laquo;</a>\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"first\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\"><span ng-bind=\\\"page.number\\\"></span></a>\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"page\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\"><span ng-bind=\\\"page.number\\\"></span></a>\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"more\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\">&#8230;</a>\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"last\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\"><span ng-bind=\\\"page.number\\\"></span></a>\\n            <a class=\\\"page-link\\\" ng-switch-when=\\\"next\\\" ng-click=\\\"params.page(page.number)\\\" href=\\\"\\\">&raquo;</a>\\n        </li>\\n    </ul>\\n</div>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/pager.html\n// module id = 31\n// module chunks = 0","var path = 'ng-table/sorterRow.html';\nvar html = \"<tr class=\\\"ng-table-sort-header\\\">\\n    <th title=\\\"{{$column.headerTitle(this)}}\\\"\\n        ng-repeat=\\\"$column in $columns\\\"\\n        ng-class=\\\"{\\n                    'sortable': $column.sortable(this),\\n                    'sort-asc': params.sorting()[$column.sortable(this)]=='asc',\\n                    'sort-desc': params.sorting()[$column.sortable(this)]=='desc'\\n                  }\\\"\\n        ng-click=\\\"sortBy($column, $event)\\\"\\n        ng-if=\\\"$column.show(this)\\\"\\n        ng-init=\\\"template = $column.headerTemplateURL(this)\\\"\\n        class=\\\"header {{$column.class(this)}}\\\">\\n        <div ng-if=\\\"!template\\\" class=\\\"ng-table-header\\\" ng-class=\\\"{'sort-indicator': params.settings().sortingIndicator == 'div'}\\\">\\n            <span ng-bind=\\\"$column.title(this)\\\" ng-class=\\\"{'sort-indicator': params.settings().sortingIndicator == 'span'}\\\"></span>\\n        </div>\\n        <div ng-if=\\\"template\\\" ng-include=\\\"template\\\"></div>\\n    </th>\\n</tr>\\n\";\nvar angular = require('angular');\nangular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/sorterRow.html\n// module id = 32\n// module chunks = 0","import * as ng1 from 'angular';\nimport coreModule from './src/core';\nimport browserModule from './src/browser';\n\nconst ngTable = ng1.module('ngTable', [coreModule.name, browserModule.name]);\n\nexport { ngTable };\nexport * from './src/core';\nexport * from './src/browser';\n\n\n// WEBPACK FOOTER //\n// ./index.ts"],"sourceRoot":""}